name: Build/release

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          persist-credentials: "false"
          ref: ${{ github.ref }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "yarn"

      - name: Build and Test
        run: |
          yarn install --frozen-lockfile --immutable
          yarn run format
          yarn run lint          
          yarn run test
          yarn run build
          pwd
          ls out/*.*

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./out

      - name: Test
        run: |
          pwd
          ls out/*.*

      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y wine-stable

      - name: Package via Electron
        run: |
          node ../scripts/prepare-electron.js
          yarn install --frozen-lockfile --immutable
          yarn run make
          yarn run make -- --platform=win32
          yarn run make -- --platform=darwin
        working-directory: ./electron

      # View this action's source code and documentation at
      # https://github.com/game-ci/steam-deploy. Note that this action only
      # works in ubuntu environments. If you want to run in Mac OS or Windows
      # environments, you'll need to write your own deploy script.
      # The depot{number}Path parameters correspond to the directories created
      # in the previous step by yarn run make.
      # - name: Deploy to Steam
      #   uses: game-ci/steam-deploy@v1.1.0
      #   with:
      #     username: ${{ secrets.STEAM_USERNAME }}
      #     password: ${{ secrets.STEAM_PASSWORD }}
      #     configVdf: ${{ secrets.STEAM_CONFIG_VDF}}
      #     ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
      #     ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
      #     appId: your app id goes here
      #     buildDescription: ${{ github.ref }}
      #     rootPath: electron/out
      #     depot1Path: ${{ github.repository }}-darwin-x64
      #     depot2Path: ${{ github.repository }}-win32-x64
      #     depot3Path: ${{ github.repository }}-linux-x64
      #     releaseBranch: prerelease
